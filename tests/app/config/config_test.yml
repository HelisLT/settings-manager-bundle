framework:
    secret: "supersecret"
    test: ~
    router:
        resource: "%kernel.root_dir%/config/routing_test.yml"
        strict_requirements: "%kernel.debug%"
    php_errors:
        log: true
    session:
        storage_id: session.storage.mock_file
    validation: ~

security:
    providers:
        in_memory:
            memory: ~

    firewalls:
        main:
            pattern: ^/
            anonymous: ~

liip_functional_test:
    command_verbosity: normal
    cache_db:
        sqlite: liip_functional_test.services_database_backup.sqlite

doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver: pdo_sqlite
                path: '%kernel.cache_dir%/test.db'
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            AppBundle:
                type: annotation
                is_bundle: true
            HelisSettingsManagerBundle:
                type: yml
                is_bundle: true
                dir: "Resources/config/doctrine"
                alias: HelisSettingsManagerBundle
                prefix: Helis\SettingsManagerBundle

monolog:
    channels:
        - settings

helis_settings_manager:
    enqueue_extension: true
    profiler: true
    logger:
        enabled: true
        service_id: monolog.logger.settings
    listeners:
        command: true
        controller: true
    settings_files:
        - '%kernel.root_dir%/config/extra_settings.yml'
    settings:
        -   name: foo
            description: 'foo desc'
            domain:
                name: default
                enabled: true # just to make sure default domain is enabled
            type: bool
            data: false
            tags:
                - 'super_switch'

        -   name: baz
            description: 'baz desc'
            domain: default
            type: bool
            data: true
            tags:
                - 'experimental'
                - 'poo'

        -   name: tuna
            description: 'tuna desc'
            domain: default
            type: string
            data: fish

        -   name: wth_yaml
            description: 'ohohoho'
            domain: default
            type: yaml
            data:
                amazing: ['foo', 'foo', 'foo', 'yee']
                cool:
                    yes: [yes, no]
                damn: 5

        -   name: choice
            description: 'choice example'
            domain: default
            type: choice
            choices: ['choice1', 'choice2']
            data: 'choice1'

services:
    _defaults:
        public: true

    App\DataFixtures\:
        resource: '%kernel.root_dir%/../bundle/DataFixtures/*'
        tags: [doctrine.fixture.orm]

    App\Command\:
        resource: '%kernel.root_dir%/../bundle/Command/*'
        tags: [console.command]

    App\Controller\:
        resource: '%kernel.root_dir%/../bundle/Controller/*'
        tags: [controller.service_arguments]

    Helis\SettingsManagerBundle\Provider\DoctrineOrmSettingsProvider:
        arguments:
            $entityManager: '@doctrine.orm.default_entity_manager'
            $settingsEntityClass: 'App\Entity\Setting'
            $tagEntityClass: 'App\Entity\Tag'
        tags:
            - { name: settings_manager.provider, provider: orm, priority: 20 }

    Helis\SettingsManagerBundle\Provider\CookieSettingsProvider:
        arguments:
            $serializer: '@settings_manager.serializer'
        tags:
            - { name: settings_manager.provider, provider: cookie, priority: 30 }
            - { name: kernel.event_subscriber }

    test.settings_manager.serializer:
        alias: 'settings_manager.serializer'
        public: true
