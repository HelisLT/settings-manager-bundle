{% extends '@HelisSettingsManager/layout.html.twig' %}

{% trans_default_domain 'HelisSettingsManager' %}

{% block contents %}
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <table class="table">
                    <thead>
                    <tr>
                        <th>{{ 'list.table.header.name' | trans }}</th>
                        {% for pName, provider in providers %}
                            <th>{{ 'list.table.header.provider' | trans({'%providerName%': pName }) }}</th>
                        {% endfor %}
                        <th>{{ 'list.table.header.actions' | trans }}</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for domain in domains %}
                        <tr>
                            <td>
                                {{ domain.getName() }}
                                <p style="margin-bottom: 0">
                                    <small class="text-muted">Priority:
                                        <strong>{{ domain.getPriority() }}</strong></small>
                                </p>
                            </td>
                            {% for pName, provider in providers %}
                                <td>
                                    {% for pDomain in provider.getDomains() if pDomain.getName() is same as(domain.getName()) %}
                                        <input
                                                type="checkbox"
                                                name="{{ pName }}_{{ pDomain.getName() | lower }}"
                                                data-for="edit"
                                                data-url-quick-edit="{{ path('settings_domain_quick_edit', {domainName: pDomain.getName(), providerName: pName }) }}"
                                                {% if pDomain.isEnabled() is same as(true) %}checked{% endif %}
                                                {% if pDomain.isReadOnly() or provider.isReadOnly() %}disabled{% endif %}>
                                        {% if not provider.isReadOnly() %}
                                            <a href="{{ path('settings_domain_edit', { domainName: domain.getName(), providerName: pName }) }}"
                                               class="btn btn-link btn-sm">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button
                                                    type="button"
                                                    class="btn btn-link btn-sm js-provider-domain-delete-button"
                                                    data-confirm-message="Are you sure to delete {{ pDomain.getName() }} domain from {{ pName }} provider?"
                                                    data-url="{{ path('settings_domain_delete', {domainName: pDomain.getName(), providerName: pName}) }}">
                                                <i class="fa fa-trash" aria-hidden="true"></i>
                                            </button>
                                        {% endif %}
                                    {% else %}
                                        {# Domain does not exist in provider #}
                                        {% if domain.isReadOnly() or provider.isReadOnly() %}
                                            -
                                        {% else %}
                                            <button
                                                    class="btn btn-link btn-xs js-domain-copy-button"
                                                    data-url="{{ path('settings_domain_copy', {domainName: domain.getName(), providerName: pName}) }}"
                                                    type="button">
                                                <i class="fa fa-plus"
                                                   aria-hidden="true"></i> {{ 'list.table.actions.create' | trans() }}
                                            </button>
                                        {% endif %}
                                    {% endfor %}
                                </td>
                            {% endfor %}

                            <td>
                                <a class="btn btn-outline-info btn-sm"
                                   href="{{ path('settings_index', {domainName: domain.getName()}) }}">{{ 'list.table.actions.settings_list' | trans }}</a>
                                {% if not domain.isReadOnly() %}
                                    <button
                                            type="button"
                                            class="btn btn-outline-danger btn-sm js-domain-delete-button"
                                            data-ask="Sure you want to delete '{{ domain.getName }}' domain?"
                                            data-url="{{ path('settings_domain_delete', {domainName: domain.getName()}) }}">
                                        {{ 'list.table.actions.delete' | trans }}
                                    </button>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        (function () {
            var $switch = $("input[data-for='edit']").bootstrapSwitch({
                size: 'mini',
                animate: false,
                onColor: 'success',
                offColor: 'danger',
                onText: 'On',
                offText: 'Off'
            });

            $switch.on('switchChange.bootstrapSwitch', function (event, state) {
                $.ajax({
                    method: 'PUT',
                    url: $(this).data('url-quick-edit'),
                    data: {
                        value: state
                    }
                });
            });

            $('.js-domain-copy-button').on('click', function () {
                var $button = $(this);
                $.ajax({
                    method: 'POST',
                    url: $button.data('url'),
                    success: function () {
                        window.location.reload();
                    }
                });
            });

            $('.js-provider-domain-delete-button').on('click', function () {
                if (confirm($(this).data('confirm-message'))) {
                    $.ajax({
                        method: 'DELETE',
                        url: $(this).data('url'),
                        success: function () {
                            window.location.reload();
                        }
                    });
                }
            });

            $('.js-domain-delete-button').on('click', function () {
                var $button = $(this);

                if (confirm($button.data('ask'))) {
                    $.ajax({
                        method: 'DELETE',
                        url: $button.data('url'),
                        success: function () {
                            window.location.reload();
                        }
                    });
                }
            });
        })();
    </script>
{% endblock %}
